{"version":3,"sources":["../../src/app/submit-status-button/submit-status-button.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAA6B,SAAA,EAAsB,MAAO,eAAA,CAAgB;AAE7G;;EAEE;AAEF;IASI;QARC,cAAS,GAAY,IAAI,CAAC;QAI1B,UAAK,GAAqB,IAAI,YAAY,EAAE,CAAC;IAI9B,CAAC;IAEjB,qDAAe,GAAf;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,YAAY,iBAAiB,CAAC,CAAC,CAAC;gBACpF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,YAAY,iBAAiB,CAAC,CAAC,CAAC;gBACnG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjE,CAAC;QACL,CAAC;IACL,CAAC;IAGD;;OAEG;IACI,2CAAK,GAAZ;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;IACxC,CAAC;IAEO,8CAAQ,GAAhB,UAAiB,SAAiB;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAEE,sCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,wCAAwC;oBAClD,QAAQ,EAAE,ixBAWJ;iBACT,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,0CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,0CAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,wBAAwB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5C,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC5B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,cAAc,EAAG,EAAE,EAAE;QAChE,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAG,EAAE,EAAE;KACvE,CAAC;IACF,kCAAC;CA/DD,AA+DC,IAAA;SA/DY,2BAA2B","file":"submit-status-button.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\n\r\n/*\r\nFor more information on this component see documentation: submit-status-button.md\r\n*/\r\n\r\nexport class SubmitStatusButtonComponent implements AfterViewInit {\r\n     canSubmit: boolean = true;\r\n     showSubmittingTemplate: boolean;\r\n     className: string;\r\n     tabIndex: number;\r\n     click: EventEmitter<{}> = new EventEmitter();\r\n     private submitButton: ElementRef;\r\n     private submittingButton: ElementRef;\r\n\r\n    constructor() { }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.tabIndex) {\r\n            if (this.submitButton && this.submitButton.nativeElement instanceof HTMLButtonElement) {\r\n                this.submitButton.nativeElement.tabIndex = this.tabIndex;\r\n            } else if (this.submittingButton && this.submittingButton.nativeElement instanceof HTMLButtonElement) {\r\n                this.submittingButton.nativeElement.tabIndex = this.tabIndex;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Reset to initial state; not submitting and not submit-able.\r\n     */\r\n    public reset(): void {\r\n        this.canSubmit = true;\r\n        this.showSubmittingTemplate = false;\r\n    }\r\n\r\n    private onSubmit(stateName: string): void {\r\n        this.click.emit();\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'buildmotion-forms-submit-status-button',\r\n    template: `<button #submitButton *ngIf=\"!showSubmittingTemplate\" type=\"submit\" [disabled]=\"!canSubmit\" [class]=\"className ||''\" (click)=\"onSubmit()\">\r\n    <span #submitTemplateContent><ng-content select=\"submitTemplate\"></ng-content></span> \r\n    <span *ngIf=\"submitTemplateContent.children.length === 0\">\r\n        <i class=\"glyphicon glyphicon-save\"></i>&nbsp;Submit\r\n    </span>\r\n</button>\r\n<button #submittingButton *ngIf=\"showSubmittingTemplate\" type=\"button\" [disabled]=\"true\" [class]=\"className ||''\">\r\n    <span #submittingTemplateContent><ng-content select=\"submittingTemplate\"></ng-content></span>\r\n    <span *ngIf=\"submittingTemplateContent.children.length === 0\">\r\n        <i class=\"fa fa-refresh fa-spin\"></i>&nbsp;Submitting...\r\n    </span>\r\n</button>`\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'canSubmit': [{ type: Input },],\n'showSubmittingTemplate': [{ type: Input },],\n'className': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'click': [{ type: Output },],\n'submitButton': [{ type: ViewChild, args: ['submitButton', ] },],\n'submittingButton': [{ type: ViewChild, args: ['submittingButton', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}